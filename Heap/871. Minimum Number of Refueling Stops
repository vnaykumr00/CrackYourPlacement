class Solution {
    public int minRefuelStops(int target, int startFuel, int[][] stations) {
        int n=0,y=0;
        PriorityQueue<Integer>p=new PriorityQueue<>(Collections.reverseOrder());
        p.add(0);
        if(stations.length==0||startFuel>=target)
        {
            if(startFuel>=target)
            return 0;
            else
            return -1;
        }
        int i=0;
        while(startFuel<=target){
            while(i<stations.length&&startFuel>=stations[i][0]){
                p.add(stations[i][1]);
                i++;
            }
            if(!p.isEmpty())
            y=(int)p.poll();
            else 
            break;
            startFuel+=y;
            n++;
            if(startFuel-target>=0)
            return n;
            
        }
        return -1;
    }
}
