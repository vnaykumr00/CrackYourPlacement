class Solution {
    public void gameOfLife(int[][] board) {
        int [][] holder = new int[board.length][board[0].length];
        int state = 0;
        for(int i = 0; i<board.length;i++)
        {
            for(int j = 0;j<board[0].length;j++)
            {
                holder[i][j]= board[i][j];
            }
        }
        for(int i = 0; i<board.length;i++)
        {
            for(int j = 0;j<board[0].length;j++)
            {
                state = board[i][j];
                int live = 0;
                if(0<=j+1 && j+1 < board[0].length&& board[i][j+1]==1)// forward
                live++;
                if(0<=j-1 && j-1 < board[0].length&& board[i][j-1]==1)// back
                live++;
                if(0<=i+1 && i+1 < board.length&& board[i+1][j]==1)// down
                live++;
                if(0<=i-1 && i-1 < board.length&& board[i-1][j]==1)// up
                live++;
                if(0<=i-1 && i-1 < board.length&&0<=j+1 && j+1 < board[0].length&& board[i-1][j+1]==1)// top right
                live++;
                if(0<=i+1 && i+1 < board.length&&0<=j+1 && j+1 < board[0].length&& board[i+1][j+1]==1)// bottom right
                live++;
                if(0<=i-1 && i-1 < board.length&&0<=j-1 && j-1 < board[0].length&& board[i-1][j-1]==1)// top left
                live++;
                if(0<=i+1 && i+1 < board.length&&0<=j-1 && j-1 < board[0].length&& board[i+1][j-1]==1)// bottom left
                live++;
                if(state==1)
                {
                    if(live<2)
                    holder[i][j] = 0;
                    else if(live==2 || live == 3)
                    holder[i][j] = state;
                    else if(live>3)
                    holder[i][j] = 0;

                }
                else
                {
                    if(live == 3)
                    holder[i][j] = 1;
                }
            
            }   

        }
         for(int i = 0; i<board.length;i++)
        {
            for(int j = 0;j<board[0].length;j++)
            {
                board[i][j]= holder[i][j];
            }
        }
    }

}
