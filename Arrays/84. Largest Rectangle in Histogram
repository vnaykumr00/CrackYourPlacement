class Solution {
    public int largestRectangleArea(int[] heights) {
        Stack<Integer> s=new Stack<>();
        int []p=new int[heights.length];
        int []n=new int[heights.length];
        int a=0,b=heights.length-1,max=0,ar=0;
        for(int i=0;i<heights.length;i++){
            while(!s.isEmpty()&&heights[s.peek()]>=heights[i]){
                s.pop();
            }
            if(s.isEmpty()){
                p[a++]=-1;
            }
            else{
                p[a++]=s.peek();
            }
            s.push(i);
        }
        while(!s.isEmpty()){
                s.pop();
            }
        for(int i=heights.length-1;i>=0;i--){
            while(!s.isEmpty()&&heights[s.peek()]>=heights[i]){
                s.pop();
            }
            if(s.isEmpty()){
                n[b--]=heights.length;
            }
            else{
                n[b--]=s.peek();
            }
            s.push(i);
        }
        for(int i=0;i<heights.length;i++){
            ar=(n[i]-p[i]-1)*heights[i];
            if(max<ar){
                max=ar;
            }
        }
        return max;
    }
}
